// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shorturl.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ShortURLRequest struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	CustomName           string   `protobuf:"bytes,2,opt,name=custom_name,json=customName,proto3" json:"custom_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShortURLRequest) Reset()         { *m = ShortURLRequest{} }
func (m *ShortURLRequest) String() string { return proto.CompactTextString(m) }
func (*ShortURLRequest) ProtoMessage()    {}
func (*ShortURLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15b647f658c2820, []int{0}
}

func (m *ShortURLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShortURLRequest.Unmarshal(m, b)
}
func (m *ShortURLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShortURLRequest.Marshal(b, m, deterministic)
}
func (m *ShortURLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShortURLRequest.Merge(m, src)
}
func (m *ShortURLRequest) XXX_Size() int {
	return xxx_messageInfo_ShortURLRequest.Size(m)
}
func (m *ShortURLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShortURLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShortURLRequest proto.InternalMessageInfo

func (m *ShortURLRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ShortURLRequest) GetCustomName() string {
	if m != nil {
		return m.CustomName
	}
	return ""
}

type ShortURLResponse struct {
	Shorturl             string   `protobuf:"bytes,1,opt,name=shorturl,proto3" json:"shorturl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShortURLResponse) Reset()         { *m = ShortURLResponse{} }
func (m *ShortURLResponse) String() string { return proto.CompactTextString(m) }
func (*ShortURLResponse) ProtoMessage()    {}
func (*ShortURLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b15b647f658c2820, []int{1}
}

func (m *ShortURLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShortURLResponse.Unmarshal(m, b)
}
func (m *ShortURLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShortURLResponse.Marshal(b, m, deterministic)
}
func (m *ShortURLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShortURLResponse.Merge(m, src)
}
func (m *ShortURLResponse) XXX_Size() int {
	return xxx_messageInfo_ShortURLResponse.Size(m)
}
func (m *ShortURLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShortURLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShortURLResponse proto.InternalMessageInfo

func (m *ShortURLResponse) GetShorturl() string {
	if m != nil {
		return m.Shorturl
	}
	return ""
}

func init() {
	proto.RegisterType((*ShortURLRequest)(nil), "fpay.shorturl.api.ShortURLRequest")
	proto.RegisterType((*ShortURLResponse)(nil), "fpay.shorturl.api.ShortURLResponse")
}

func init() { proto.RegisterFile("shorturl.proto", fileDescriptor_b15b647f658c2820) }

var fileDescriptor_b15b647f658c2820 = []byte{
	// 214 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0xce, 0xc8, 0x2f,
	0x2a, 0x29, 0x2d, 0xca, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x4c, 0x2b, 0x48, 0xac,
	0xd4, 0x83, 0x0b, 0x26, 0x16, 0x64, 0x2a, 0xb9, 0x70, 0xf1, 0x07, 0x83, 0xf8, 0xa1, 0x41, 0x3e,
	0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x02, 0x5c, 0xcc, 0xa5, 0x45, 0x39, 0x12, 0x8c,
	0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20, 0xa6, 0x90, 0x3c, 0x17, 0x77, 0x72, 0x69, 0x71, 0x49, 0x7e,
	0x6e, 0x7c, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0x13, 0x58, 0x86, 0x0b, 0x22, 0xe4, 0x97, 0x98, 0x9b,
	0xaa, 0xa4, 0xc7, 0x25, 0x80, 0x30, 0xa5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x48, 0x8a, 0x8b,
	0x03, 0x66, 0x13, 0xd4, 0x2c, 0x38, 0xdf, 0x28, 0x0f, 0x61, 0x6b, 0x70, 0x6a, 0x51, 0x59, 0x66,
	0x72, 0xaa, 0x50, 0x34, 0x17, 0x9f, 0x73, 0x51, 0x6a, 0x62, 0x49, 0x2a, 0x4c, 0x42, 0x48, 0x49,
	0x0f, 0xc3, 0xb9, 0x7a, 0x68, 0x6e, 0x95, 0x52, 0xc6, 0xab, 0x06, 0xe2, 0x12, 0x25, 0x06, 0x27,
	0xad, 0x28, 0x8d, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c, 0x7d, 0x90, 0x16,
	0xfd, 0x9c, 0xd4, 0x8c, 0xd2, 0xcc, 0x82, 0xc4, 0x4a, 0x5d, 0x98, 0x5e, 0xdd, 0xf4, 0x7c, 0xfd,
	0xc4, 0x82, 0xcc, 0x24, 0x36, 0x70, 0x58, 0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6d, 0xc6,
	0x1d, 0x84, 0x3d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ShortURLServiceClient is the client API for ShortURLService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ShortURLServiceClient interface {
	CreateShortURL(ctx context.Context, in *ShortURLRequest, opts ...grpc.CallOption) (*ShortURLResponse, error)
}

type shortURLServiceClient struct {
	cc *grpc.ClientConn
}

func NewShortURLServiceClient(cc *grpc.ClientConn) ShortURLServiceClient {
	return &shortURLServiceClient{cc}
}

func (c *shortURLServiceClient) CreateShortURL(ctx context.Context, in *ShortURLRequest, opts ...grpc.CallOption) (*ShortURLResponse, error) {
	out := new(ShortURLResponse)
	err := c.cc.Invoke(ctx, "/fpay.shorturl.api.ShortURLService/CreateShortURL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ShortURLServiceServer is the server API for ShortURLService service.
type ShortURLServiceServer interface {
	CreateShortURL(context.Context, *ShortURLRequest) (*ShortURLResponse, error)
}

// UnimplementedShortURLServiceServer can be embedded to have forward compatible implementations.
type UnimplementedShortURLServiceServer struct {
}

func (*UnimplementedShortURLServiceServer) CreateShortURL(ctx context.Context, req *ShortURLRequest) (*ShortURLResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateShortURL not implemented")
}

func RegisterShortURLServiceServer(s *grpc.Server, srv ShortURLServiceServer) {
	s.RegisterService(&_ShortURLService_serviceDesc, srv)
}

func _ShortURLService_CreateShortURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShortURLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ShortURLServiceServer).CreateShortURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/fpay.shorturl.api.ShortURLService/CreateShortURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ShortURLServiceServer).CreateShortURL(ctx, req.(*ShortURLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ShortURLService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "fpay.shorturl.api.ShortURLService",
	HandlerType: (*ShortURLServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateShortURL",
			Handler:    _ShortURLService_CreateShortURL_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shorturl.proto",
}
